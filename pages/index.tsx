import { Recipe } from "@prisma/client";
import { GetServerSidePropsContext } from "next";
import { unstable_getServerSession as getServerSession } from "next-auth";
import { useSession } from "next-auth/react";
import Head from "next/head";
import client from "../lib/prismadb";
import { authOptions } from "./api/auth/[...nextauth]";

// import { authOptions } from "./api/auth/[...nextauth]"

export default function Home(recipes: Recipe[]) {
  const { data: session } = useSession();
  console.log(recipes);
  return (
    <>
      <Head>
        <title>Let&#39;s Feast</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        <div className="">
          <h1>Welcome Home</h1>
        </div>
      </main>
    </>
  );
}

export const getServerSideProps = async (
  context: GetServerSidePropsContext
) => {
  const session = await getServerSession(context.req, context.res, authOptions);
  // console.log(req, res, context);
  // const session = await getSession({ req: req.req });
  if (!session) {
    console.log("You are not logged in");
  }
  const recipes = await client.recipe.findMany({
    where: {
      authorId: session.user!.id,
    },
  });
  // res.status(200).json({ recipes: recipes });
  return {
    props: {
      recipes,
    },
  };
};
